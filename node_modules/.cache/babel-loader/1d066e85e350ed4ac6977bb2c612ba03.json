{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louha\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\"; // These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\n\nfunction nextTick(prevState, focusDuration, breakDuration) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n\n  if (prevState.label === \"Focusing\") {\n    const timeElapsed = focusDuration * 60 - timeRemaining;\n    prevState.percentComplete = timeElapsed / (focusDuration * 60) * 100;\n  } else {\n    const timeElapsed = breakDuration * 60 - timeRemaining;\n    prevState.percentComplete = timeElapsed / (breakDuration * 60) * 100;\n  }\n\n  return { ...prevState,\n    timeRemaining\n  };\n}\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\n\n\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return currentSession => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        duration: breakDuration,\n        timeRemaining: breakDuration * 60,\n        percentComplete: 0\n      };\n    }\n\n    return {\n      label: \"Focusing\",\n      duration: focusDuration,\n      timeRemaining: focusDuration * 60,\n      percentComplete: 0\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // The current session - null where there is no session running\n\n  const [session, setSession] = useState({\n    label: null,\n    duration: null,\n    timeRemaining: null,\n    percentComplete: null\n  }); // ToDo: Allow the user to adjust the focus and break duration.\n  // The current Focus Duration timer starts at 25\n\n  const [focusDuration, setFocusDuration] = useState(25); // The current Break Duration timer starts at 5\n\n  const [breakDuration, setBreakDuration] = useState(5); // Disable state for focusDuration buttons\n\n  const [disableDurationButtons, setDisableDurationButtons] = useState(false); // The disabled state of the stop button\n\n  const [disableStopButton, setDisableStopButton] = useState(true);\n  const [activeSessionStyle, setActiveSessionStyle] = useState(\"none\"); // PAUSED text appears after pressing the pause button\n\n  const [paused, setPaused] = useState(\"none\"); // Function to handle decreasing the focus or break duration time\n\n  const handleMinusFocusDurationClick = () => {\n    setFocusDuration(currentFocusDuration => {\n      return Math.max(5, currentFocusDuration - 5);\n    });\n  };\n\n  const handleMinusBreakDurationClick = () => {\n    setBreakDuration(currentBreakDuration => {\n      return Math.max(1, currentBreakDuration - 1);\n    });\n  }; // Function to handle increasing the focus or break duration time\n\n\n  const handlePlusFocusDurationClick = () => {\n    setFocusDuration(currentFocusDuration => {\n      return Math.min(60, currentFocusDuration + 5);\n    });\n  };\n\n  const handlePlusBreakDurationClick = () => {\n    setBreakDuration(currentBreakDuration => {\n      return Math.min(15, currentBreakDuration + 1);\n    });\n  };\n\n  const handleStopButtonClick = () => {\n    setIsTimerRunning(false);\n    setSession({\n      label: null,\n      duration: null,\n      timeRemaining: null,\n      percentComplete: null\n    });\n    setFocusDuration(25);\n    setBreakDuration(5);\n    setDisableDurationButtons(false);\n    setDisableStopButton(true);\n    setActiveSessionStyle(\"none\");\n    setPaused(\"none\");\n  };\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n\n\n  useInterval(() => {\n    if (session.timeRemaining === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      return setSession(nextSession(focusDuration, breakDuration));\n    }\n\n    return setSession(nextTick(session, focusDuration, breakDuration));\n  }, // REMEMBER TO CHANGE THIS BACK TO 1000\n  isTimerRunning ? 1000 : null);\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n\n  function playPause() {\n    // Disable FocusDuration buttons upon pressing play\n    setDisableDurationButtons(true); // Enable the stop button upon pressing play\n\n    setDisableStopButton(false); // Display active session div upon pressing play\n\n    setActiveSessionStyle(\"block\");\n    setIsTimerRunning(prevState => {\n      if (prevState) {\n        setPaused(\"block\");\n      }\n\n      const nextState = !prevState;\n\n      if (nextState) {\n        setSession(prevStateSession => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession.label === null) {\n            return {\n              label: \"Focusing\",\n              duration: focusDuration,\n              timeRemaining: focusDuration * 60,\n              percentComplete: 0\n            };\n          }\n\n          return prevStateSession;\n        });\n      }\n\n      setPaused(\"block\");\n      return nextState;\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: handleMinusFocusDurationClick,\n    disabled: disableDurationButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: handlePlusFocusDurationClick,\n    disabled: disableDurationButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(breakDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    onClick: handleMinusBreakDurationClick,\n    disabled: disableDurationButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    onClick: handlePlusBreakDurationClick,\n    disabled: disableDurationButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"stop\",\n    title: \"Stop the session\",\n    onClick: handleStopButtonClick,\n    disabled: disableStopButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    style: {\n      display: activeSessionStyle\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, session.label, \" for \", minutesToDuration(session.duration), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    style: {\n      display: activeSessionStyle\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, secondsToDuration(session.timeRemaining), \" remaining\"), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      display: paused\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, \"PAUSED\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\",\n      display: activeSessionStyle\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": session.percentComplete // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${session.percentComplete}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/louha/Thinkful/qualified-challenges/Project_Pomodoro_Timer/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","secondsToDuration","nextTick","prevState","focusDuration","breakDuration","timeRemaining","Math","max","label","timeElapsed","percentComplete","nextSession","currentSession","duration","Pomodoro","isTimerRunning","setIsTimerRunning","session","setSession","setFocusDuration","setBreakDuration","disableDurationButtons","setDisableDurationButtons","disableStopButton","setDisableStopButton","activeSessionStyle","setActiveSessionStyle","paused","setPaused","handleMinusFocusDurationClick","currentFocusDuration","handleMinusBreakDurationClick","currentBreakDuration","handlePlusFocusDurationClick","min","handlePlusBreakDurationClick","handleStopButtonClick","Audio","play","playPause","nextState","prevStateSession","oi","display","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\n\nimport {minutesToDuration, secondsToDuration} from \"../utils/duration\";\n\n// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState, focusDuration, breakDuration) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  if (prevState.label === \"Focusing\") {\n    const timeElapsed = (focusDuration * 60) - timeRemaining;\n    prevState.percentComplete = (timeElapsed / (focusDuration * 60)) * 100;\n  } else {\n    const timeElapsed = (breakDuration * 60) - timeRemaining;\n    prevState.percentComplete = (timeElapsed / (breakDuration * 60)) * 100;\n  }\n  return {\n    ...prevState,\n    timeRemaining,\n  };\n}\n\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        duration: breakDuration,\n        timeRemaining: breakDuration * 60,\n        percentComplete: 0,\n      };\n    }\n    return {\n      label: \"Focusing\",\n      duration: focusDuration,\n      timeRemaining: focusDuration * 60,\n      percentComplete: 0,\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  // The current session - null where there is no session running\n  const [session, setSession] = useState({ label: null, duration: null, timeRemaining: null, percentComplete: null });\n\n// ToDo: Allow the user to adjust the focus and break duration.\n  // The current Focus Duration timer starts at 25\n  const [focusDuration, setFocusDuration] = useState(25);\n  // The current Break Duration timer starts at 5\n  const [breakDuration, setBreakDuration] = useState(5);\n  // Disable state for focusDuration buttons\n  const [disableDurationButtons, setDisableDurationButtons] = useState(false);\n\n  // The disabled state of the stop button\n  const [disableStopButton, setDisableStopButton] = useState(true);\n\n  const [activeSessionStyle, setActiveSessionStyle] = useState(\"none\");\n\n  // PAUSED text appears after pressing the pause button\n  const [paused, setPaused] = useState(\"none\");\n\n  // Function to handle decreasing the focus or break duration time\n  const handleMinusFocusDurationClick = () => {\n    setFocusDuration((currentFocusDuration) => {\n      return Math.max(5, (currentFocusDuration - 5 ));\n    });\n  }\n  \n  const handleMinusBreakDurationClick = () => {\n    setBreakDuration((currentBreakDuration) => {\n      return Math.max(1, (currentBreakDuration - 1 ));\n    });\n  }\n\n  // Function to handle increasing the focus or break duration time\n  const handlePlusFocusDurationClick = () => {\n    setFocusDuration((currentFocusDuration) => {\n      return Math.min(60, (currentFocusDuration + 5 ));\n    });\n  }\n\n  const handlePlusBreakDurationClick = () => {\n    setBreakDuration((currentBreakDuration) => {\n      return Math.min(15, (currentBreakDuration + 1 ));\n    });\n  }\n\n  const handleStopButtonClick = () => {\n    setIsTimerRunning(false);\n    setSession({\n      label: null,\n      duration: null, \n      timeRemaining: null,\n      percentComplete: null, \n    });\n    setFocusDuration(25);\n    setBreakDuration(5);\n    setDisableDurationButtons(false);\n    setDisableStopButton(true);\n    setActiveSessionStyle(\"none\");\n    setPaused(\"none\");\n  }\n\n\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n  useInterval(() => {\n      if (session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        return setSession(nextSession(focusDuration, breakDuration));\n      }\n      return setSession(nextTick(session, focusDuration, breakDuration));\n    },\n    // REMEMBER TO CHANGE THIS BACK TO 1000\n    isTimerRunning ? 1000 : null\n  );\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    // Disable FocusDuration buttons upon pressing play\n    setDisableDurationButtons(true);\n    // Enable the stop button upon pressing play\n    setDisableStopButton(false);\n    // Display active session div upon pressing play\n    setActiveSessionStyle(\"block\");\n\n    setIsTimerRunning((prevState) => {\n      if (prevState) {\n        setPaused(\"block\");\n      }\n      const nextState = !prevState;\n      \n      if (nextState) {\n        \n        setSession((prevStateSession) => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession.label === null) {\n            return {\n              label: \"Focusing\",\n              duration: focusDuration,\n              timeRemaining: focusDuration * 60,\n              percentComplete: 0,\n            };\n          }\n          \n          return prevStateSession;\n        });\n\n      }\n      setPaused(\"block\");\n      return nextState;\n    });\n    \n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={handleMinusFocusDurationClick}\n                disabled={disableDurationButtons}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={handlePlusFocusDurationClick}\n                disabled={disableDurationButtons}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(breakDuration)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={handleMinusBreakDurationClick}\n                  disabled={disableDurationButtons}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={handlePlusBreakDurationClick}\n                  disabled={disableDurationButtons}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session. */}\n            {/* TODO: Disable the stop button when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n              onClick={handleStopButtonClick}\n              disabled={disableStopButton}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n            <h2 data-testid=\"session-title\" style={{display: activeSessionStyle}}>\n              {session.label} for {minutesToDuration(session.duration)} minutes\n            </h2>\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\" style={{display: activeSessionStyle}}>\n              {secondsToDuration(session.timeRemaining)} remaining\n            </p>\n            <h2 style={{display: paused}}>\n              PAUSED\n            </h2>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\", display: activeSessionStyle }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={session.percentComplete} // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: `${session.percentComplete}%` }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}