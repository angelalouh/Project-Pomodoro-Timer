{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louha\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\"; // These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\n\nfunction nextTick(prevState) {\n  let timeElapsed; // needs access to focusDuration as a prop!\n\n  const focusDuration = 25 * 60;\n  const breakDuration = 5 * 60;\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n\n  if (prevState.label === \"Focusing\") {\n    timeElapsed = focusDuration - timeRemaining;\n  } else {\n    timeElapsed = breakDuration - timeRemaining;\n  }\n\n  return { ...prevState,\n    timeRemaining,\n    timeElapsed\n  };\n}\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\n\n\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return currentSession => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60\n      };\n    }\n\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // The current session - null where there is no session running\n\n  const [session, setSession] = useState({\n    label: null,\n    timeRemaining: null,\n    timeElapsed: null\n  }); // ToDo: Allow the user to adjust the focus and break duration.\n  // The current Focus Duration timer starts at 25\n\n  const [focusDuration, setFocusDuration] = useState(25); // The current Break Duration timer starts at 5\n\n  const [breakDuration, setBreakDuration] = useState(5); // Disable state for focusDuration buttons\n\n  const [disableDurationButtons, setDisableDurationButtons] = useState(false); // The disabled state of the stop button\n\n  const [disableStopButton, setDisableStopButton] = useState(true);\n  const [activeSessionStyle, setActiveSessionStyle] = useState(\"none\"); // Function to handle decreasing the focus or break duration time\n\n  const handleMinusFocusDurationClick = () => {\n    setFocusDuration(currentFocusDuration => {\n      return Math.max(5, currentFocusDuration - 1);\n    });\n  };\n\n  const handleMinusBreakDurationClick = () => {\n    setBreakDuration(currentBreakDuration => {\n      return Math.max(1, currentBreakDuration - 1);\n    });\n  }; // Function to handle increasing the focus or break duration time\n\n\n  const handlePlusFocusDurationClick = () => {\n    setFocusDuration(currentFocusDuration => {\n      return Math.min(60, currentFocusDuration + 5);\n    });\n  };\n\n  const handlePlusBreakDurationClick = () => {\n    setBreakDuration(currentBreakDuration => {\n      return Math.min(15, currentBreakDuration + 1);\n    });\n  };\n\n  const handleStopButtonClick = () => {\n    setIsTimerRunning(false);\n    setDisableDurationButtons(false);\n    setDisableStopButton(true);\n    setActiveSessionStyle(\"none\");\n  };\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n\n\n  useInterval(() => {\n    if (session.timeRemaining === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      return setSession(nextSession(focusDuration, breakDuration));\n    }\n\n    return setSession(nextTick);\n  }, // REMEMBER TO CHANGE THIS BACK TO 1000\n  isTimerRunning ? 100 : null);\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n\n  function playPause() {\n    // Disable FocusDuration buttons upon pressing play\n    setDisableDurationButtons(true); // Enable the stop button upon pressing play\n\n    setDisableStopButton(false); // Display active session div upon pressing play\n\n    setActiveSessionStyle(\"block\");\n    setIsTimerRunning(prevState => {\n      const nextState = !prevState;\n\n      if (nextState) {\n        setSession(prevStateSession => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession.label === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60\n            };\n          }\n\n          return prevStateSession;\n        });\n      }\n\n      return nextState;\n    });\n  }\n\n  console.log(session.label);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: handleMinusFocusDurationClick,\n    disabled: disableDurationButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: handlePlusFocusDurationClick,\n    disabled: disableDurationButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(breakDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    onClick: handleMinusBreakDurationClick,\n    disabled: disableDurationButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    onClick: handlePlusBreakDurationClick,\n    disabled: disableDurationButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"stop\",\n    title: \"Stop the session\",\n    onClick: handleStopButtonClick,\n    disabled: disableStopButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: activeSessionStyle\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for \", minutesToDuration(focusDuration), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: \"0%\"\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/louha/Thinkful/qualified-challenges/Project_Pomodoro_Timer/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","secondsToDuration","nextTick","prevState","timeElapsed","focusDuration","breakDuration","timeRemaining","Math","max","label","nextSession","currentSession","Pomodoro","isTimerRunning","setIsTimerRunning","session","setSession","setFocusDuration","setBreakDuration","disableDurationButtons","setDisableDurationButtons","disableStopButton","setDisableStopButton","activeSessionStyle","setActiveSessionStyle","handleMinusFocusDurationClick","currentFocusDuration","handleMinusBreakDurationClick","currentBreakDuration","handlePlusFocusDurationClick","min","handlePlusBreakDurationClick","handleStopButtonClick","Audio","play","playPause","nextState","prevStateSession","console","log","oi","display","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\n\nimport {minutesToDuration, secondsToDuration} from \"../utils/duration\";\n\n// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n  let timeElapsed;\n  // needs access to focusDuration as a prop!\n  const focusDuration = 25 * 60;\n  const breakDuration = 5 * 60;\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  if (prevState.label === \"Focusing\") {\n    timeElapsed = focusDuration - timeRemaining;\n  } else {\n    timeElapsed = breakDuration - timeRemaining;\n  }\n  return {\n    ...prevState,\n    timeRemaining,\n    timeElapsed,\n  };\n}\n\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60,\n      };\n    }\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60,\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  // The current session - null where there is no session running\n  const [session, setSession] = useState({ label: null, timeRemaining: null, timeElapsed: null});\n\n// ToDo: Allow the user to adjust the focus and break duration.\n  // The current Focus Duration timer starts at 25\n  const [focusDuration, setFocusDuration] = useState(25);\n  // The current Break Duration timer starts at 5\n  const [breakDuration, setBreakDuration] = useState(5);\n  // Disable state for focusDuration buttons\n  const [disableDurationButtons, setDisableDurationButtons] = useState(false);\n\n  // The disabled state of the stop button\n  const [disableStopButton, setDisableStopButton] = useState(true);\n\n  const [activeSessionStyle, setActiveSessionStyle] = useState(\"none\");\n\n  // Function to handle decreasing the focus or break duration time\n  const handleMinusFocusDurationClick = () => {\n    setFocusDuration((currentFocusDuration) => {\n      return Math.max(5, (currentFocusDuration - 1 ));\n    });\n  }\n  \n  const handleMinusBreakDurationClick = () => {\n    setBreakDuration((currentBreakDuration) => {\n      return Math.max(1, (currentBreakDuration - 1 ));\n    });\n  }\n\n  // Function to handle increasing the focus or break duration time\n  const handlePlusFocusDurationClick = () => {\n    setFocusDuration((currentFocusDuration) => {\n      return Math.min(60, (currentFocusDuration + 5 ));\n    });\n  }\n\n  const handlePlusBreakDurationClick = () => {\n    setBreakDuration((currentBreakDuration) => {\n      return Math.min(15, (currentBreakDuration + 1 ));\n    });\n  }\n\n  const handleStopButtonClick = () => {\n    setIsTimerRunning(false);\n    setDisableDurationButtons(false);\n    setDisableStopButton(true);\n    setActiveSessionStyle(\"none\");\n  }\n\n  \n\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n  useInterval(() => {\n      if (session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        return setSession(nextSession(focusDuration, breakDuration));\n      }\n      return setSession(nextTick);\n    },\n    // REMEMBER TO CHANGE THIS BACK TO 1000\n    isTimerRunning ? 100 : null\n  );\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    // Disable FocusDuration buttons upon pressing play\n    setDisableDurationButtons(true);\n    // Enable the stop button upon pressing play\n    setDisableStopButton(false);\n    // Display active session div upon pressing play\n    setActiveSessionStyle(\"block\");\n\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession.label === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60,\n            };\n          }\n          return prevStateSession;\n        });\n      }\n      return nextState;\n    });\n    \n  }\n\n\n  console.log(session.label);\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={handleMinusFocusDurationClick}\n                disabled={disableDurationButtons}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={handlePlusFocusDurationClick}\n                disabled={disableDurationButtons}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(breakDuration)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={handleMinusBreakDurationClick}\n                  disabled={disableDurationButtons}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={handlePlusBreakDurationClick}\n                  disabled={disableDurationButtons}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session. */}\n            {/* TODO: Disable the stop button when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n              onClick={handleStopButtonClick}\n              disabled={disableStopButton}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div style={{display: activeSessionStyle}}>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n            <h2 data-testid=\"session-title\">\n              {session?.label} for {minutesToDuration(focusDuration)} minutes\n            </h2>\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration(session?.timeRemaining)} remaining\n            </p>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: \"0%\" }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}